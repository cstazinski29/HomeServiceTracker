@using HomeServiceTracker.Shared.Models.ScheduledService
@using Microsoft.AspNetCore.Authorization
@inject HttpClient http
@attribute [Authorize]
@page "/scheduledService/{scheduledServiceId:int}"

<h3>Service Item #@scheduledServiceId</h3>

@if (ScheduledService == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Service Item #@scheduledServiceId</span>
            </div>
            <div class="card-body">
                <p class="card-text"><span class="fw-bold">Service Name: </span>@ScheduledService.ServiceName</p>
                <p class="card-text"><span class="fw-bold">Home Name: </span>@ScheduledService.HomeName</p>
                <p class="card-text"><span class="fw-bold">Scheduled Service Date: </span>@ScheduledService.ScheduledServiceDate.GetValueOrDefault().ToShortDateString()</p>
                <p class="card-text"><span class="fw-bold">Last Service Date: </span>@ScheduledService.LastServiceDate.GetValueOrDefault().ToShortDateString()</p>
                <p class="card-text"><span class="fw-bold">Next Service Date: </span>@ScheduledService.NextServiceDate.GetValueOrDefault().ToShortDateString()</p>
                <p class="card-text"><span class="fw-bold">Service Completed? </span>@ScheduledService.ServiceCompleted</p>
                <p class="card-text"><span class="fw-bold">Service Provider Name: </span>@ScheduledService.ServiceProviderName</p>
                <p class="card-text"><span class="fw-bold">Service Cost: </span>@ScheduledService.ServiceCost</p>
                <p class="card-text"><span class="fw-bold">Service Rating: </span>@ScheduledService.ServiceRating</p>
                @*add more fields*@
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left">Created: [insert created date]</span>
@*                @if (ScheduledService.ModifiedUtc !=null)
                {
                    <span class="text-right">Modified: [insert modified date]</span>
                }*@
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between">
                <a href=@($"scheduledService/edit/{scheduledServiceId}") class="btn btn-outline-secondary">Edit</a>
                <a href="/scheduledService/index" class="btn btn-outline-primary">Back to Index</a>
                @*<a href=@($"scheduledService/delete/{scheduledServiceId}") class="btn btn-outline-danger">Delete</a>*@

@*                <hr />
                <a href="/scheduledService/index">Back to Service Item Index</a>*@
                <hr />
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int scheduledServiceId { get; set; }
    public ScheduledServiceDetail ScheduledService { get; set; }
    protected override async Task OnInitializedAsync()
    {
        ScheduledService = await http.GetFromJsonAsync<ScheduledServiceDetail>($"/api/scheduledService/{scheduledServiceId}");
    }
}
