@using HomeServiceTracker.Shared.Models.ServiceItem
@using Microsoft.AspNetCore.Authorization
@inject HttpClient http
@attribute [Authorize]
@page "/serviceItem/{serviceItemId:int}"

<h3>Service Item #@serviceItemId</h3>

@if (ServiceItem == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Service Item #@serviceItemId</span>
            </div>
            <div class="card-body">
                <h4 class="card-title">@ServiceItem.ServiceName</h4>
                <p class="card-text">@ServiceItem.ServiceDescription</p>
                <p class="card-text">@ServiceItem.ServiceFrequency</p>
                @*add more fields*@
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left">Created: [insert created date]</span>
@*                @if (ServiceItem.ModifiedUtc !=null)
                {
                    <span class="text-right">Modified: [insert modified date]</span>
                }*@
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"serviceItem/edit/{serviceItemId}") class="btn btn-outline-primary">Edit</a>
                <a href=@($"serviceItem/delete/{serviceItemId}") class="btn btn-outline-danger">Delete</a>

                <hr />
                <a href="/serviceItem/index">Back to Service Item Index</a>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int serviceItemId { get; set; }
    public ServiceItemDetail ServiceItem { get; set; }
    protected override async Task OnInitializedAsync()
    {
        ServiceItem = await http.GetFromJsonAsync<ServiceItemDetail>($"/api/serviceItem/{serviceItemId}");
    }
}
